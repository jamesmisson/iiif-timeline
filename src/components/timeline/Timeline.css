.divider-hitbox {
  cursor: ns-resize;
  display: flex;
  align-items: center;
  padding: 3px;
  /* padding: 0 1rem; */
  /* background-color:#d400ff; */
}

.divider-hitbox:hover {
  background-color: rgba(0, 255, 255, 0.541);
}

/* .divider {
  height: 100%;
  padding-top: 4px;
  padding-bottom: 4px;
} */

.divider:hover{
  background-color: blue;

}

.bottomPane {
  flex: 1;
  display: flex;
  flex-direction: column;
}

.splitView {
  height: 100%;
  display: flex;
  flex: 1;
  flex-direction: column;
}

#uvContainer {
  display: flex;
  flex-direction: column;
  flex: 1;
  height: 100%;
  overflow: hidden; /* Enable scrolling if needed */
  
}

#timelineContainer {
  display: flex;
  flex-direction: column;
  flex: 1;
  height: 100%;
  overflow: hidden;
  border: rgb(255, 255, 255) solid 1px;
}

.topPane {
  border: rgb(255, 255, 255) solid 1px;
}

#buttons {
  height: 30px;
  margin-bottom: 15px;
}


/* stuff for nav buttons overlay */
/* fade to black idea is current hard because it covers up the surrounding border */
/* might have to add to timeline to get z-index between container and  */


.navButtonContainer {
  position: absolute;
  top: 0;
  height: 100%;
  width: 3%;
  z-index: 9997;
  display: flex;
  justify-content: center;
  align-items: center;
}

.navButtonContainer#left {
  left: 0;
  background: linear-gradient(to right, black 0%, transparent 100%);
}

.navButtonContainer#right {
  right: 0;
  background: linear-gradient(to left, black 0%, transparent 100%);
}

input[type="button"] {
  background-size: contain; /* Ensure the image fits inside the button */
  background-repeat: no-repeat; /* Prevent the image from repeating */
  background-position: center; /* Center the icon inside the button */
  background-color: transparent;
  border: none; /* Remove the default border */
  width: 30px; /* Adjust the width to match the icon size */
  height: 30px; /* Adjust the height to match the icon size */
  cursor: pointer; /* Show pointer cursor on hover */
  padding: 0;
}

#moveLeft {
  background-image: url('../../assets/left_arrow.png'); /* Set the button background as the icon */
}

#moveRight {
  background-image: url('../../assets/right_arrow.png'); /* Set the button background as the icon */
}



/* for item parts, [data-id] is currently used to heighten the specifity so it overrides the default css which vite prioritises */

.vis-item[data-id] {
  border: 1px;
  border-color: #ffffff;
  background-color: rgb(0, 0, 0);
  font-size: 10pt;
  color: rgb(255, 255, 255);
  border-radius: 0;
}

.vis-item.vis-selected[data-id] {
  border-color: aqua!important;
  background-color: black;
}

.vis-box[data-id] {
  transition: opacity 0.5s ease, border-color 0.5s ease;
  transition: opacity 0.5s ease, box-shadow 0.5s ease;
  cursor: pointer;
}

.vis-line[data-id] {
  /* make transition to off linger a bit longer */
  transition: opacity 0.7s ease, border-color 0.7s ease;
}

.vis-dot[data-id] {
  transition: opacity 0.9s ease, box-shadow 0.9s ease;
  transition-delay: 0.4s;
}

/* pseudo element to make line hoverable? */
.vis-line[data-id]:before {
  content: "";
  position: absolute;
  height: 100%;
  width: 10px;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  z-index: -1;
}

.vis-box[data-id].hovered,
.vis-dot[data-id].hovered {
  border-color: aqua;
  box-shadow: 0px 0px 10px 5px rgba(0, 255, 255, 0.553);
  cursor: pointer;
  transition: none; /* No transition effect when the hover starts */
}

.vis-line[data-id].hovered {
  border-color: aqua;
  transition: none; /* No transition effect when the hover starts */
}

/* timeline border, axis & grid */

.vis-timeline {
  border: none !important;
  overflow: visible!important;
  cursor: move!important;
}

.vis-time-axis .vis-text {
  color: white!important;
  padding-top: 10px;
  padding-left: 10px;
}

.vis-time-axis .vis-text.vis-major {
  font-weight: bold!important;
}

.vis-time-axis .vis-grid.vis-minor,
.vis-time-axis .vis-grid.vis-major {
  border-width: 0.5px!important;
  border-color: rgb(32, 32, 32)!important;
}

/* timeline tooltip */

/* currently needing to use !important a lot to override default style.
won't need to do that when template functions are added to the component*/
.vis-tooltip.visible {

  display: flex;
  align-items: center;
  overflow: hidden;
  background-color: transparent !important;
  border-radius: 0px !important;
  border: none !important;
  color: white !important;
  opacity: 0;
  transition: opacity 100ms ease-in, visibility 0ms ease-in 100ms;
  z-index: 9999 !important;
}

.vis-tooltip.visible {

  background-color: black;
  visibility: visible;
  opacity: 1;
  transition-delay: 0ms;
  z-index: 9999!important;
}

/* .vis-tooltip img {
  width: 20%;
  height: auto;
} */

/* .vis-tooltip div {
  padding: 15px;
  width: 50%;
} */
